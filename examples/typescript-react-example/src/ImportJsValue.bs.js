// Generated by ReScript, PLEASE EDIT WITH CARE

import ImportJsValueGen from "./ImportJsValue.gen";
import * as ImportJsValueGen$1 from "./ImportJsValue.gen";

function round(prim) {
  return ImportJsValueGen$1.round(prim);
}

function area(prim) {
  return ImportJsValueGen$1.area(prim);
}

function returnMixedArray(prim) {
  return ImportJsValueGen$1.returnMixedArray();
}

var roundedNumber = ImportJsValueGen$1.round(1.8);

var areaValue = ImportJsValueGen$1.area({
      x: 3,
      y: undefined
    });

function getAbs(x) {
  return x.getAbs();
}

var AbsoluteValue = {
  getAbs: getAbs
};

function useGetProp(x) {
  return x.getProp() + 1 | 0;
}

function useGetAbs(x) {
  return x.getAbs() + 1 | 0;
}

function useColor(prim) {
  return ImportJsValueGen$1.useColor(prim);
}

function higherOrder(prim) {
  return ImportJsValueGen$1.higherOrder(prim);
}

var returnedFromHigherOrder = ImportJsValueGen$1.higherOrder(function (prim0, prim1) {
      return prim0 + prim1 | 0;
    });

function convertVariant(prim) {
  return ImportJsValueGen$1.convertVariant(prim);
}

function polymorphic(prim) {
  return ImportJsValueGen$1.polymorphic(prim);
}

var $$default = ImportJsValueGen;

export {
  round ,
  area ,
  returnMixedArray ,
  roundedNumber ,
  areaValue ,
  AbsoluteValue ,
  useGetProp ,
  useGetAbs ,
  useColor ,
  higherOrder ,
  returnedFromHigherOrder ,
  convertVariant ,
  polymorphic ,
  $$default ,
  $$default as default,
}
/* roundedNumber Not a pure module */
